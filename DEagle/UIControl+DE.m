//
//  UIControl+DE.m
//  DETest
//
//  Created by Soroush Khodaii on 2016-09-04.
//  Copyright Â© 2016 Zororoca. All rights reserved.
//

#import "UIControl+DE.h"
#import <objc/runtime.h>
#import <objc/message.h>

#import "DE.h"
#import "DEEvent.h"
#import "DELog.h"

@implementation UIControl (DE)


+(void) setupDEUITracking {
    
    void (^swizzle)(Class c, SEL orig, SEL new) = ^(Class c, SEL orig, SEL new){
        Method origMethod = class_getInstanceMethod(c, orig);
        Method newMethod = class_getInstanceMethod(c, new);
        if(class_addMethod(c, orig, method_getImplementation(newMethod), method_getTypeEncoding(newMethod)))
            class_replaceMethod(c, new, method_getImplementation(origMethod), method_getTypeEncoding(origMethod));
        else
            method_exchangeImplementations(origMethod, newMethod);
    };
    
    swizzle([UIControl class], @selector(sendAction:to:forEvent:), @selector(DEsendAction:to:forEvent:));
//    swizzle([UIControl class], @selector(addTarget:action:forControlEvents:), @selector(DEaddTarget:action:forControlEvents:));
}

- (void)DEsendAction:(SEL)action to:(nullable id)target forEvent:(nullable UIEvent *)event {
    
//    [DELog log:[NSString stringWithFormat:@"send action %@ to target %@ for event %@ called",NSStringFromSelector(action),[target description],[event description]] verbosity:3];
    
    // we want to ignore segue transition events that are generated by storyboard as they don't contain any useful info and all appear the same, more importantly we are already loging a segue transition event through our UIViewController category.
    
    if (!([target isKindOfClass:NSClassFromString(@"UIStoryboardShowSegueTemplate")] || [target isKindOfClass:NSClassFromString(@"UIStoryboardUnwindSegueTemplate")])) {
        [[DE sharedInstance] recordEvent:[[DEUIEvent alloc] initWithUIEvent:event forAction:action to:target]];
    }
    
    // we call this function because we're assuming that it will be switched with the original.
    [self DEsendAction:action to:target forEvent:event];
}

//- (void)DEaddTarget:(nullable id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents {
//    NSLog(@"addTarget:%@ for action:%@",[target description],NSStringFromSelector(action));
//    
//    [self DEaddTarget:target action:action forControlEvents:controlEvents];
//}

@end
